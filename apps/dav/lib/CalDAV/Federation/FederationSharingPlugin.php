<?php

declare(strict_types=1);

/**
 * SPDX-FileCopyrightText: 2025 Nextcloud GmbH and Nextcloud contributors
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */

namespace OCA\DAV\CalDAV\Federation;

use Sabre\DAV\INode;
use Sabre\DAV\PropFind;
use Sabre\DAV\Server;
use Sabre\DAV\Sharing\Plugin as SabreSharingPlugin;
use Sabre\HTTP\RequestInterface;
use Sabre\HTTP\ResponseInterface;

class FederationSharingPlugin extends SabreSharingPlugin {
	public function __construct() {
	}

	public function getFeatures() {
		return parent::getFeatures(); // TODO: Change the autogenerated stub
	}

	public function getPluginName() {
		return parent::getPluginName(); // TODO: Change the autogenerated stub
	}

	public function initialize(Server $server) {
		parent::initialize($server); // TODO: Change the autogenerated stub
	}

	public function shareResource($path, array $sharees) {
		parent::shareResource($path, $sharees); // TODO: Change the autogenerated stub
	}

	public function propFind(PropFind $propFind, INode $node) {
		parent::propFind($propFind, $node); // TODO: Change the autogenerated stub
	}

	public function httpPost(RequestInterface $request, ResponseInterface $response) {
		return parent::httpPost($request, $response); // TODO: Change the autogenerated stub
	}

	public function getSupportedPrivilegeSet(INode $node, array &$supportedPrivilegeSet) {
		parent::getSupportedPrivilegeSet($node, $supportedPrivilegeSet); // TODO: Change the autogenerated stub
	}

	public function getPluginInfo() {
		return parent::getPluginInfo(); // TODO: Change the autogenerated stub
	}

	public function browserPostAction($path, $action, $postVars) {
		return parent::browserPostAction($path, $action, $postVars); // TODO: Change the autogenerated stub
	}

}
